bootJar { enabled = false }
jar { enabled = true }

dependencies {
    api 'org.springframework.boot:spring-boot-starter-data-jpa'

    implementation "com.querydsl:querydsl-core"
    implementation "com.querydsl:querydsl-jpa"
    implementation 'org.jimsey.projects.camel.components:camel-spring-simple-messaging:1.0.0'
    annotationProcessor "com.querydsl:querydsl-apt:${dependencyManagement.importedProperties['querydsl.version']}:jpa"
    annotationProcessor("jakarta.persistence:jakarta.persistence-api")
    annotationProcessor("jakarta.annotation:jakarta.annotation-api")

    implementation 'com.github.gavlyukovskiy:p6spy-spring-boot-starter:1.7.1'
    implementation 'com.google.code.gson:gson:2.8.9'

    // WebSocket
    implementation 'org.springframework.boot:spring-boot-starter-websocket'
    // sockjs
    implementation 'org.webjars:sockjs-client:1.5.1'
    // stomp
    implementation 'org.webjars:stomp-websocket:2.3.4'
    // gson
    implementation 'com.google.code.gson:gson:2.9.0'

    runtimeOnly 'com.mysql:mysql-connector-j'
    runtimeOnly 'com.h2database:h2'

    // https://mvnrepository.com/artifact/org.modelmapper/modelmapper
    implementation group: 'org.modelmapper', name: 'modelmapper', version: '2.4.5'

    // Security
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.boot:spring-boot-starter-oauth2-client'

}

def generated = 'src/main/generated'

sourceSets {
    main.java.srcDirs += [generated]
}

tasks.withType(JavaCompile) {
    options.generatedSourceOutputDirectory.set(file(generated))
}

clean.doLast {
    file(generated).deleteDir()
}

